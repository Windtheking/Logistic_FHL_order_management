/**
 * Client Model
 * ============
 * This file defines the Sequelize `Client` model which maps to the `clients` table
 * in the database. It includes:
 * - Model attributes (`ClientAttributes`).
 * - Creation attributes (`ClientCreationAttributes`).
 * - The model definition with its columns and constraints.
 *
 * This model is used by services and controllers to perform CRUD operations
 * for clients (create, read, update, delete).
 */

import { DataTypes, Model, Optional } from "sequelize";
import sequelize from "../../config/database";

/**
 * Client attributes (ClientAttributes).
 * Defines the shape of the client object that Sequelize will handle at runtime.
 * - `Id_client`: Numeric identifier for the client (primary key).
 * - `id_card`: Client identification/document number.
 * - `client_name`: Client's full name.
 * - `client_email`: Client's email address.
 * - `passwordHash`: Password hash used for authentication.
 * - `role_admin`: Boolean flag indicating if the client has admin role.
 */
export interface ClientAttributes {
    Id_client: number;
    id_card: string;
    client_name: string;
    client_email: string;
    passwordHash: string;
    role_admin: boolean;
}

/**
 * Attributes required to create a client (ClientCreationAttributes).
 * `Optional` is used to mark fields that are not required when inserting a
 * new record (for example the id is auto-generated by the DB and the
 * `passwordHash` may be generated/filled later).
 */
export interface ClientCreationAttributes extends Optional<ClientAttributes, "state_id" | "passwordHash"> {}

/**
 * Client model class for Sequelize.
 * Implements the attributes defined in `ClientAttributes` and
 * `ClientCreationAttributes`. Properties for each model instance are declared
 * below.
 */
class Client extends Model<ClientAttributes, ClientCreationAttributes> implements ClientAttributes {
    public Id_client!: number;
    public id_card!: string;
    public client_name!: string;
    public client_email!: string;
    public passwordHash!: string;
    public role_admin!: boolean;

    // Timestamps managed by Sequelize
    public readonly created_at!: Date;
    public readonly updated_at!: Date;
}

/**
 * Initialization of the Client model with Sequelize configuration.
 * Fields:
 * - `id_client`: auto-incrementing integer, primary key.
 * - `id_card`: unique string (max 20) representing ID/document number.
 * - `client_name`: client's name (max 50), unique.
 * - `client_email`: client's email (max 50), unique.
 * - `passwordHash`: password hash (max 255).
 * - `role_admin`: boolean indicating administrative privileges.
 *
 * Model options:
 * - `sequelize`: DB connection instance.
 * - `modelName`: Sequelize model name.
 * - `tableName`: database table name.
 * - `timestamps`: true to manage `created_at` and `updated_at`.
 */
Client.init(
    {
        id_client: {
            type: DataTypes.INTEGER,
            autoIncrement: true,
            primaryKey: true,
        },
        id_card: {
            type: DataTypes.STRING(20),
            allowNull: false,
            unique: true,
        },
        client_name: {
            type: DataTypes.STRING(50),
            allowNull: false,
            unique: true,
        },
        client_email: {
            type: DataTypes.STRING(50),
            allowNull: false,
            unique: true,
        },
        passwordHash: {
            type: DataTypes.STRING(255),
            allowNull: false,
        },
        role_admin: {
            type: DataTypes.BOOLEAN,
            allowNull: false,
            defaultValue: false,
        },

    },
    {
        sequelize,
        modelName: "Client",
        tableName: "clients",
        timestamps: true,
        createdAt: "created_at",
        updatedAt: "updated_at",
    }
);

export default Client;